"""
assets
"""
enum MediaType {
  IMAGE
  VIDEO
  AUDIO
  DOCUMENT
}

type Metadata {
  key: String!
  value: String!
}

type Asset {
  id: ID!
  url: String!
  type: MediaType!
  metadata: [Metadata] # List of Metadata items
  filename: String!
  size: Int
  createdAt: String
  modifiedAt: String
  tags: [String]
}

input MetadataInput {
  key: String!
  value: String!
}

input AssetInput {
  url: String!
  type: MediaType!
  metadata: [MetadataInput] # Adjusted to accept a list of MetadataInput items
  filename: String!
  size: Int
  tags: [String]
}

input AssetUpdateInput {
  url: String
  type: MediaType
  metadata: [MetadataInput] # Adjusted for updates
  filename: String
  size: Int
  tags: [String]
}

"""
Album
"""
type Album {
  id: ID!
  title: String!
  description: String
  assets: [Asset] # Assuming 'Asset' type is defined elsewhere in your schema
  tags: [String]
  createdAt: String
  modifiedAt: String
  modifiedBy: String
}

input AlbumInput {
  title: String!
  description: String
  assets: [ID] # References to existing Asset IDs
  tags: [String]
}

input AlbumUpdateInput {
  title: String
  description: String
  assets: [ID] # References for updating existing Asset associations
  tags: [String]
}



type Query {
  albums: [Album]
  album(id: ID!): Album
  assets: [Asset]
  asset(id: ID!): Asset
}


type Mutation {
  addAlbum(input: AlbumInput): Album
  updateAlbum(id: ID!, input: AlbumUpdateInput): Album
  deleteAlbum(id: ID!): Boolean

  addAsset(input: AssetInput): Asset
  updateAsset(id: ID!, input: AssetUpdateInput): Asset
  deleteAsset(id: ID!): Boolean
}